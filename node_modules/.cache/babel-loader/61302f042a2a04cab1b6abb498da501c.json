{"ast":null,"code":"var _jsxFileName = \"/Users/saikiran/Desktop/corona/src/components/Charts/Charts.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/index';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchApi();\n  }, [dailyData]);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: '#red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', \"Deaths\"],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/saikiran/Desktop/corona/src/components/Charts/Charts.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchApi","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAuC,OAAvC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGC,MAAMC,MAAM,GAAC,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAWC,IAAAA,MAAX;AAAkBC,IAAAA;AAAlB,GAAN;AAAmCC,EAAAA;AAAnC,CAAD,KAAiD;AAC1D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMa,QAAQ,GAAE,YAAY;AACxBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAIAY,IAAAA,QAAQ;AACT,GANQ,EAMP,CAACF,SAAD,CANO,CAAT;AAQD,QAAMG,SAAS,GACXH,SAAS,CAACI,MAAV,gBACA,oBAAC,IAAD;AACC,IAAA,IAAI,EACA;AACDC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAaA,IAA3B,CADP;AAEDC,MAAAA,QAAQ,EAAG,CAAC;AACXb,QAAAA,IAAI,EAAGK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAkBA,SAAhC,CADI;AAEXa,QAAAA,KAAK,EAAE,UAFI;AAGXC,QAAAA,WAAW,EAAE,SAHF;AAIXC,QAAAA,IAAI,EAAC;AAJM,OAAD,EAMX;AACChB,QAAAA,IAAI,EAAGK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAET,UAAAA;AAAF,SAAD,KAAeA,MAA7B,CADR;AAECY,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,MAHd;AAICE,QAAAA,eAAe,EAAE,mBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OANW;AAFV,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAoBM,IArBV;AA0BA,QAAME,QAAQ,GACVjB,SAAS,gBACL,oBAAC,GAAD;AACC,IAAA,IAAI,EAAE;AACLS,MAAAA,MAAM,EAAG,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADJ;AAELG,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAE,QADD;AAENG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFX;AAGNjB,QAAAA,IAAI,EAAE,CAACC,SAAD,EAAYE,SAAZ,EAAuBD,MAAvB;AAHA,OAAD;AAFJ,KADP;AAUC,IAAA,OAAO,EAAE;AACLiB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAC;AAAV,OADH;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAC,IAAV;AAAeE,QAAAA,IAAI,EAAE,oBAAmBlB,OAAQ;AAAhD;AAFF,KAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAoBN,IArBP;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,OAAO,GAAEc,QAAF,GAAaV,SADzB,CADJ;AAKH,CArEA;;AAsED,eAAeT,MAAf","sourcesContent":["import React ,{useState,useEffect}from 'react'\nimport { fetchDailyData } from '../../api/index';\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\n\n const Charts=({data:{confirmed,deaths,recovered},country}) => {\n     const [dailyData, setDailyData]=useState({});\n\n     useEffect(()=>{\n       const fetchApi= async () => {\n           setDailyData(await fetchDailyData());\n       }\n    \n       fetchApi();\n     },[dailyData]);\n\n    const lineChart =(  \n        dailyData.length ? (\n        <Line \n         data={\n             {\n            labels: dailyData.map(({ date })=> date),\n            datasets : [{\n             data : dailyData.map(({ confirmed })=> confirmed),\n             label: 'Infected',\n             borderColor: '#3333ff',\n             fill:true,\n            },\n            {\n             data : dailyData.map(({ deaths })=> deaths),\n             label: 'Deaths',\n             borderColor: '#red',\n             backgroundColor: 'rgba(255,0,0,0.5)',\n             fill: true,\n            }],\n             }\n         }\n        />) : null\n\n    );\n\n\n    const barChart=(\n        confirmed ? ( \n            <Bar \n             data={{\n              labels : ['Infected','Recovered',\"Deaths\"],\n              datasets:[{\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                  data: [confirmed, recovered, deaths]\n\n              }]\n             }}\n             options={{\n                 legend :{ display:false},\n                 title: { display:true,text:`Current state in ${country}`}\n             }}\n\n\n\n            />\n\n        ): null\n    );\n\n\n\n\n    return (\n        <div className={styles.container}>\n            {country? barChart : lineChart}\n        </div>\n    )\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}